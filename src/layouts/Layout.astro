---
import type { JSX } from "astro/jsx-runtime";
// In Astro, <slot /> is like React's {children}.
// Whatever content is passed between the component's tags
// will be rendered inside <slot />.
interface Props {
  pageTitle: string;
  children: JSX.Element;
  frontmatter?: {
    title?: string;
  };
}
// `Astro.props.frontmatter` comes from the frontmatter section of a .md/.mdx file.
// It contains metadata (like title, date, tags) defined at the top of the Markdown file.
const { pageTitle, frontmatter } = Astro.props as Props;
---

<!-- template section -->
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle || frontmatter?.title}</title>
  </head>
  <body>
    <main class="container">
      <slot />
    </main>
  </body>
</html>

<style>
  * {
    box-sizing: border-box;
  }
  html,
  body {
    height: 100%;
  }
  body {
    margin: 0;
  }

  body {
    display: flex;
    flex-direction: column;
    min-height: 100dvh; /* mejor que 100vh en m√≥viles */
    background: linear-gradient(135deg, #fdfbfb 0%, #ebedee 50%, #ffffff 100%);
    background-repeat: no-repeat;
    background-size: cover;
    color: #222;
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
  }

  :root {
    --step--1: clamp(0.875rem, 0.84rem + 0.2vw, 0.95rem);
    --step-0: clamp(1rem, 0.95rem + 0.5vw, 1.125rem);
    --step-1: clamp(1.25rem, 1.1rem + 1vw, 1.5rem);
    --step-2: clamp(1.5rem, 1.3rem + 1.5vw, 2rem);
  }
  body {
    font-size: var(--step-0);
    font-family: Arial, Helvetica, sans-serif;
  }
  h1 {
    font-size: var(--step-2);
    margin: 0.5rem 0;
  }
  h2 {
    font-size: var(--step-1);
    margin: 0.5rem 0;
  }

  .container {
    width: 100%;
    max-width: 72rem; /* ~1152px */
    margin-inline: auto;
    padding: 1rem; /* mobile padding */
  }

  ul {
    list-style: none;
    padding-left: 0.5rem;
    margin: 0.5rem 0;
  }

  button {
    font: inherit;
    padding: 0.6rem 1rem;
    border-radius: 0.5rem;
    cursor: pointer;
  }

  @media (min-width: 640px) {
    /* sm */
    .container {
      padding: 1.5rem;
    }
  }

  @media (min-width: 1024px) {
    /* lg */
    body {
      flex-direction: column;
    }
    .container {
      padding: 2rem;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    * {
      animation: none !important;
      transition: none !important;
    }
  }
</style>
